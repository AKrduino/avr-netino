##############################################################
# Arduino Borads definitions for AVR-Net-IO (Pollin.de)
# (C) Michael Maassen <m2ic(at)gmx.net>
# Licence: GPLv2 (http://www.gnu.org/licenses/gpl2.txt)
##############################################################

anio644p.name=AVR-NET-IO w/ ATmega644P
### sometimes stk500 protocol has problems with auto reset
### protocol=arduino is more reliable, but needs avrdude >= 5.6
# anio644p.upload.protocol=arduino
anio644p.upload.protocol=stk500
anio644p.upload.maximum_size=63488
anio644p.upload.speed=57600
anio644p.bootloader.low_fuses=0xFF
anio644p.bootloader.high_fuses=0xDC
anio644p.bootloader.extended_fuses=0xFD
anio644p.bootloader.path=atmega
anio644p.bootloader.file=ATmegaBOOT_168_atmega644p.hex
anio644p.bootloader.unlock_bits=0x3F
anio644p.bootloader.lock_bits=0x0F
anio644p.build.mcu=atmega644p
anio644p.build.f_cpu=16000000L
anio644p.build.core=avrnetio
### Sanguino
#anio644p.build.core=arduino
#anio644p.bootloader.path=atmega644p
#anio644p.bootloader.file=ATmegaBOOT_644P.hex

##############################################################
anio644.name=AVR-NET-IO w/ ATmega644
### sometimes stk500 protocol has problems with auto reset
### protocol=arduino is more reliable, but needs avrdude >= 5.6
# anio644.upload.protocol=arduino
anio644.upload.protocol=stk500
anio644.upload.maximum_size=63488
anio644.upload.speed=57600
anio644.bootloader.low_fuses=0xFF
anio644.bootloader.high_fuses=0xDC
anio644.bootloader.extended_fuses=0xFD
anio644.bootloader.path=atmega
anio644.bootloader.file=ATmegaBOOT_168_atmega644.hex
anio644.bootloader.unlock_bits=0x3F
anio644.bootloader.lock_bits=0x0F
anio644.build.mcu=atmega644
anio644.build.f_cpu=16000000L
anio644.build.core=avrnetio

##############################################################
anio32.name=AVR-NET-IO w/ ATmega32
### sometimes stk500 protocol has problems with auto reset
### protocol=arduino is more reliable, but needs avrdude >= 5.6
# anio32.upload.protocol=arduino
anio32.upload.protocol=stk500
anio32.upload.maximum_size=30720
anio32.upload.speed=57600
anio32.bootloader.low_fuses=0xff
#anio32.bootloader.high_fuses=0xdd
anio32.bootloader.high_fuses=0xca
anio32.bootloader.path=atmega
anio32.bootloader.file=ATmegaBOOT_168_atmega32.hex
### bootloader from http://retrointerfacing.com/?p=30
#anio32.bootloader.path=atmega32
#anio32.bootloader.file=ATmegaBOOT_32.hex
anio32.bootloader.unlock_bits=0x3F
anio32.bootloader.lock_bits=0x0F
anio32.build.mcu=atmega32
anio32.build.f_cpu=16000000L
anio32.build.core=avrnetio
